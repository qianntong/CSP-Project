import numpy as np
import time

start_time = time.time()

def stacker(cycle, con):
    X, Y = cycle.shape      #x is the row, starting from top; y is column from left
    states = np.zeros(Y)
    for x in range (0, X):
        for y in range (0, Y):
            cycle_cop = cycle.copy()
            if x == H-1:
                if cycle[x][y] == 0:
                    cycle_cop[x][y] = con
                    states = np.vstack((states, cycle_cop))
            elif cycle[x][y] == 0:
                if cycle[x+1][y] != 0:
                    cycle_cop[x][y] = con
                    states = np.vstack((states, cycle_cop))
    states = np.delete(states, (0), axis=0)
    states = np.reshape(states, (Y, X, Y))
    return states

def cycler(state, containers):
    series = stacker(state, containers[0])
    for s in range (0, len(series)):
        newseries = stacker(series[s], containers[1])
        for s in range (0, len(newseries)):
            newnewseries = stacker(newseries[s], containers[2])
            print(newnewseries)
        

test = np.array([[0, 0, 0],
                 [0, 0, 0],
                 [0, 0, 0],
                 [1, 0, 0]])
print(test)
H, B = test.shape
C = np.array([5, 4, 3])
print(cycler(test, C))     



    

